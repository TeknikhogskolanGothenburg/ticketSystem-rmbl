DROP TABLE IF EXISTS ApiKeys;
DROP TABLE IF EXISTS TicketsToTransactions;
DROP TABLE IF EXISTS Sessions;
DROP TABLE IF EXISTS Users;
DROP TABLE IF EXISTS Flights;
DROP TABLE IF EXISTS AirPorts;
DROP TABLE IF EXISTS Franchises;
DROP TABLE IF EXISTS Transactions;
DROP TABLE IF EXISTS Tickets;

CREATE TABLE Users(
	ID INT PRIMARY KEY IDENTITY,
	Username VARCHAR(50) ,
	Password VARCHAR(255),
	Email VARCHAR(255),
	FirstName VARCHAR(50),
	LastName VARCHAR(50),
	City VARCHAR(50),
	ZipCode VARCHAR(25),
	Address VARCHAR(255),
	Grade TINYINT NOT NULL DEFAULT(1),
	DeletedUser BIT NOT NULL DEFAULT(0),
	CONSTRAINT AK_Username UNIQUE(Username)
);

CREATE TABLE Franchises(
 	ID INT PRIMARY KEY IDENTITY,
 	Name VARCHAR(50) NOT NULL
);

CREATE TABLE AirPorts(
	ID INT PRIMARY KEY IDENTITY,
	Name VARCHAR(50),
	Country VARCHAR(50),
	UTCOffset DECIMAL(4,2)
);

CREATE TABLE Transactions(
	ID INT PRIMARY KEY IDENTITY,
	PaymentStatus VARCHAR(255),
	PaymentReferenceId VARCHAR(255)
);

CREATE TABLE Flights(
	ID INT PRIMARY KEY IDENTITY,
	DepatureDate DATETIME,
	DeparturePort INT FOREIGN KEY REFERENCES AirPorts(ID),
	ArrivalDate DATETIME,
	ArrivalPort INT FOREIGN KEY REFERENCES AirPorts(ID),
	Seats INT NOT NULL,
	Price INT NOT NULL
);

CREATE TABLE Tickets(
	ID INT PRIMARY KEY IDENTITY,
	UserID INT FOREIGN KEY REFERENCES Users(ID),
	FlightID INT FOREIGN KEY REFERENCES Flights(ID),
	SeatNumber INT NOT NULL,
	BookAt INT FOREIGN KEY REFERENCES Franchises(ID)
);

CREATE TABLE TicketsToTransactions(
	TicketID INT NOT NULL FOREIGN KEY REFERENCES Tickets(ID),
	TransactionID INT NOT NULL FOREIGN KEY REFERENCES Transactions(ID),
	primary key (TicketID, TransactionID)
);

CREATE TABLE ApiKeys(
	KeyValue VARCHAR(50) NOT NULL PRIMARY KEY,
	FranchiseID INT FOREIGN KEY REFERENCES Franchises(ID),
	Secret VARCHAR(50) NOT NULL
);

CREATE TABLE Sessions(
	ID INT PRIMARY KEY IDENTITY,
	UserID INT FOREIGN KEY REFERENCES Users(ID),
	Secret VARCHAR(50) NOT NULL,
	Active BIT NOT NULL DEFAULT(1),
	Created DateTime
);
