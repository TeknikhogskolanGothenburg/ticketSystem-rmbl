### YamlMime:ManagedReference
items:
- uid: TicketSystem.RestApiClient.Model.User
  commentId: T:TicketSystem.RestApiClient.Model.User
  id: User
  parent: TicketSystem.RestApiClient.Model
  children:
  - TicketSystem.RestApiClient.Model.User.Address
  - TicketSystem.RestApiClient.Model.User.City
  - TicketSystem.RestApiClient.Model.User.DeletedUser
  - TicketSystem.RestApiClient.Model.User.Email
  - TicketSystem.RestApiClient.Model.User.FirstName
  - TicketSystem.RestApiClient.Model.User.Grade
  - TicketSystem.RestApiClient.Model.User.Id
  - TicketSystem.RestApiClient.Model.User.LastName
  - TicketSystem.RestApiClient.Model.User.Password
  - TicketSystem.RestApiClient.Model.User.Username
  - TicketSystem.RestApiClient.Model.User.ZipCode
  langs:
  - csharp
  - vb
  name: User
  nameWithType: User
  fullName: TicketSystem.RestApiClient.Model.User
  type: Class
  source:
    id: User
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 7
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: public class User
    content.vb: Public Class User
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.RestApiClient.Model.User.Id
  commentId: P:TicketSystem.RestApiClient.Model.User.Id
  id: Id
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: User.Id
  fullName: TicketSystem.RestApiClient.Model.User.Id
  type: Property
  source:
    id: Id
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 9
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: TicketSystem.RestApiClient.Model.User.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.Username
  commentId: P:TicketSystem.RestApiClient.Model.User.Username
  id: Username
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: User.Username
  fullName: TicketSystem.RestApiClient.Model.User.Username
  type: Property
  source:
    id: Username
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 11
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(50, MinimumLength = 2)]

      [RegularExpression("^[A-Za-z0-9]+$", ErrorMessage = "Only allowed username with A-Z, a-z and 0-9")]

      public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(50, MinimumLength:=2)>

      <RegularExpression("^[A-Za-z0-9]+$", ErrorMessage:="Only allowed username with A-Z, a-z and 0-9")>

      Public Property Username As String
  overload: TicketSystem.RestApiClient.Model.User.Username*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^[A-Za-z0-9]+$
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Only allowed username with A-Z, a-z and 0-9
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.Password
  commentId: P:TicketSystem.RestApiClient.Model.User.Password
  id: Password
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: User.Password
  fullName: TicketSystem.RestApiClient.Model.User.Password
  type: Property
  source:
    id: Password
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 16
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [StringLength(50, MinimumLength = 5)]

      [DataType(DataType.Password)]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(50, MinimumLength:=5)>

      <DataType(DataType.Password)>

      Public Property Password As String
  overload: TicketSystem.RestApiClient.Model.User.Password*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 5
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.Email
  commentId: P:TicketSystem.RestApiClient.Model.User.Email
  id: Email
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: User.Email
  fullName: TicketSystem.RestApiClient.Model.User.Email
  type: Property
  source:
    id: Email
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 24
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(255, MinimumLength = 5)]

      public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(255, MinimumLength:=5)>

      Public Property Email As String
  overload: TicketSystem.RestApiClient.Model.User.Email*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 5
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.Grade
  commentId: P:TicketSystem.RestApiClient.Model.User.Grade
  id: Grade
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: Grade
  nameWithType: User.Grade
  fullName: TicketSystem.RestApiClient.Model.User.Grade
  type: Property
  source:
    id: Grade
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 28
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Range(1, 3)]

      public short Grade { get; set; }
    parameters: []
    return:
      type: System.Int16
    content.vb: >-
      <Range(1, 3)>

      Public Property Grade As Short
  overload: TicketSystem.RestApiClient.Model.User.Grade*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    - type: System.Int32
      value: 3
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.FirstName
  commentId: P:TicketSystem.RestApiClient.Model.User.FirstName
  id: FirstName
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: User.FirstName
  fullName: TicketSystem.RestApiClient.Model.User.FirstName
  type: Property
  source:
    id: FirstName
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 31
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(50, MinimumLength = 2)]

      public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(50, MinimumLength:=2)>

      Public Property FirstName As String
  overload: TicketSystem.RestApiClient.Model.User.FirstName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.LastName
  commentId: P:TicketSystem.RestApiClient.Model.User.LastName
  id: LastName
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: User.LastName
  fullName: TicketSystem.RestApiClient.Model.User.LastName
  type: Property
  source:
    id: LastName
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 35
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(50, MinimumLength = 2)]

      public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(50, MinimumLength:=2)>

      Public Property LastName As String
  overload: TicketSystem.RestApiClient.Model.User.LastName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.Address
  commentId: P:TicketSystem.RestApiClient.Model.User.Address
  id: Address
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: User.Address
  fullName: TicketSystem.RestApiClient.Model.User.Address
  type: Property
  source:
    id: Address
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 39
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(255, MinimumLength = 2)]

      public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(255, MinimumLength:=2)>

      Public Property Address As String
  overload: TicketSystem.RestApiClient.Model.User.Address*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 255
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.ZipCode
  commentId: P:TicketSystem.RestApiClient.Model.User.ZipCode
  id: ZipCode
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: ZipCode
  nameWithType: User.ZipCode
  fullName: TicketSystem.RestApiClient.Model.User.ZipCode
  type: Property
  source:
    id: ZipCode
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 43
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [StringLength(25)]

      public string ZipCode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <StringLength(25)>

      Public Property ZipCode As String
  overload: TicketSystem.RestApiClient.Model.User.ZipCode*
  attributes:
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 25
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.City
  commentId: P:TicketSystem.RestApiClient.Model.User.City
  id: City
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: City
  nameWithType: User.City
  fullName: TicketSystem.RestApiClient.Model.User.City
  type: Property
  source:
    id: City
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 46
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(50, MinimumLength = 1)]

      public string City { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(50, MinimumLength:=1)>

      Public Property City As String
  overload: TicketSystem.RestApiClient.Model.User.City*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.User.DeletedUser
  commentId: P:TicketSystem.RestApiClient.Model.User.DeletedUser
  id: DeletedUser
  parent: TicketSystem.RestApiClient.Model.User
  langs:
  - csharp
  - vb
  name: DeletedUser
  nameWithType: User.DeletedUser
  fullName: TicketSystem.RestApiClient.Model.User.DeletedUser
  type: Property
  source:
    id: DeletedUser
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\User.cs
    startLine: 50
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: public bool DeletedUser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property DeletedUser As Boolean
  overload: TicketSystem.RestApiClient.Model.User.DeletedUser*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.RestApiClient.Model
  commentId: N:TicketSystem.RestApiClient.Model
  isExternal: false
  name: TicketSystem.RestApiClient.Model
  nameWithType: TicketSystem.RestApiClient.Model
  fullName: TicketSystem.RestApiClient.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.RestApiClient.Model.User.Id*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.Id
  isExternal: false
  name: Id
  nameWithType: User.Id
  fullName: TicketSystem.RestApiClient.Model.User.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystem.RestApiClient.Model.User.Username*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.Username
  isExternal: false
  name: Username
  nameWithType: User.Username
  fullName: TicketSystem.RestApiClient.Model.User.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.RestApiClient.Model.User.Password*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.Password
  isExternal: false
  name: Password
  nameWithType: User.Password
  fullName: TicketSystem.RestApiClient.Model.User.Password
- uid: TicketSystem.RestApiClient.Model.User.Email*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.Email
  isExternal: false
  name: Email
  nameWithType: User.Email
  fullName: TicketSystem.RestApiClient.Model.User.Email
- uid: TicketSystem.RestApiClient.Model.User.Grade*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.Grade
  isExternal: false
  name: Grade
  nameWithType: User.Grade
  fullName: TicketSystem.RestApiClient.Model.User.Grade
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: TicketSystem.RestApiClient.Model.User.FirstName*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.FirstName
  isExternal: false
  name: FirstName
  nameWithType: User.FirstName
  fullName: TicketSystem.RestApiClient.Model.User.FirstName
- uid: TicketSystem.RestApiClient.Model.User.LastName*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.LastName
  isExternal: false
  name: LastName
  nameWithType: User.LastName
  fullName: TicketSystem.RestApiClient.Model.User.LastName
- uid: TicketSystem.RestApiClient.Model.User.Address*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.Address
  isExternal: false
  name: Address
  nameWithType: User.Address
  fullName: TicketSystem.RestApiClient.Model.User.Address
- uid: TicketSystem.RestApiClient.Model.User.ZipCode*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.ZipCode
  isExternal: false
  name: ZipCode
  nameWithType: User.ZipCode
  fullName: TicketSystem.RestApiClient.Model.User.ZipCode
- uid: TicketSystem.RestApiClient.Model.User.City*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.City
  isExternal: false
  name: City
  nameWithType: User.City
  fullName: TicketSystem.RestApiClient.Model.User.City
- uid: TicketSystem.RestApiClient.Model.User.DeletedUser*
  commentId: Overload:TicketSystem.RestApiClient.Model.User.DeletedUser
  isExternal: false
  name: DeletedUser
  nameWithType: User.DeletedUser
  fullName: TicketSystem.RestApiClient.Model.User.DeletedUser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
