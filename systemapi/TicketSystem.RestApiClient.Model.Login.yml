### YamlMime:ManagedReference
items:
- uid: TicketSystem.RestApiClient.Model.Login
  commentId: T:TicketSystem.RestApiClient.Model.Login
  id: Login
  parent: TicketSystem.RestApiClient.Model
  children:
  - TicketSystem.RestApiClient.Model.Login.Password
  - TicketSystem.RestApiClient.Model.Login.Username
  langs:
  - csharp
  - vb
  name: Login
  nameWithType: Login
  fullName: TicketSystem.RestApiClient.Model.Login
  type: Class
  source:
    id: Login
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Login.cs
    startLine: 7
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: public class Login
    content.vb: Public Class Login
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.RestApiClient.Model.Login.Username
  commentId: P:TicketSystem.RestApiClient.Model.Login.Username
  id: Username
  parent: TicketSystem.RestApiClient.Model.Login
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: Login.Username
  fullName: TicketSystem.RestApiClient.Model.Login.Username
  type: Property
  source:
    id: Username
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Login.cs
    startLine: 9
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(50, MinimumLength = 2)]

      [RegularExpression("^[A-Za-z0-9]+$", ErrorMessage = "Only allowed username with A-Z, a-z and 0-9")]

      public string Username { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(50, MinimumLength:=2)>

      <RegularExpression("^[A-Za-z0-9]+$", ErrorMessage:="Only allowed username with A-Z, a-z and 0-9")>

      Public Property Username As String
  overload: TicketSystem.RestApiClient.Model.Login.Username*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^[A-Za-z0-9]+$
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Only allowed username with A-Z, a-z and 0-9
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.Login.Password
  commentId: P:TicketSystem.RestApiClient.Model.Login.Password
  id: Password
  parent: TicketSystem.RestApiClient.Model.Login
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: Login.Password
  fullName: TicketSystem.RestApiClient.Model.Login.Password
  type: Property
  source:
    id: Password
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Login.cs
    startLine: 13
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(50, MinimumLength = 5)]

      [DataType(DataType.Password)]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(50, MinimumLength:=5)>

      <DataType(DataType.Password)>

      Public Property Password As String
  overload: TicketSystem.RestApiClient.Model.Login.Password*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 50
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 5
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.RestApiClient.Model
  commentId: N:TicketSystem.RestApiClient.Model
  isExternal: false
  name: TicketSystem.RestApiClient.Model
  nameWithType: TicketSystem.RestApiClient.Model
  fullName: TicketSystem.RestApiClient.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.RestApiClient.Model.Login.Username*
  commentId: Overload:TicketSystem.RestApiClient.Model.Login.Username
  isExternal: false
  name: Username
  nameWithType: Login.Username
  fullName: TicketSystem.RestApiClient.Model.Login.Username
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.RestApiClient.Model.Login.Password*
  commentId: Overload:TicketSystem.RestApiClient.Model.Login.Password
  isExternal: false
  name: Password
  nameWithType: Login.Password
  fullName: TicketSystem.RestApiClient.Model.Login.Password
