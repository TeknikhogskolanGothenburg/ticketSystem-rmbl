### YamlMime:ManagedReference
items:
- uid: TicketSystem.RestApiClient.Model.Payment
  commentId: T:TicketSystem.RestApiClient.Model.Payment
  id: Payment
  parent: TicketSystem.RestApiClient.Model
  children:
  - TicketSystem.RestApiClient.Model.Payment.#ctor
  - TicketSystem.RestApiClient.Model.Payment.OrderReference
  - TicketSystem.RestApiClient.Model.Payment.Valuta
  langs:
  - csharp
  - vb
  name: Payment
  nameWithType: Payment
  fullName: TicketSystem.RestApiClient.Model.Payment
  type: Class
  source:
    id: Payment
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Payment.cs
    startLine: 7
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: public class Payment
    content.vb: Public Class Payment
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.RestApiClient.Model.Payment.Valuta
  commentId: P:TicketSystem.RestApiClient.Model.Payment.Valuta
  id: Valuta
  parent: TicketSystem.RestApiClient.Model.Payment
  langs:
  - csharp
  - vb
  name: Valuta
  nameWithType: Payment.Valuta
  fullName: TicketSystem.RestApiClient.Model.Payment.Valuta
  type: Property
  source:
    id: Valuta
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Payment.cs
    startLine: 9
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: >-
      [Required]

      [StringLength(3, MinimumLength = 3)]

      [RegularExpression("^[A-Z]+$", ErrorMessage = "Only currency in select are accepted")]

      public string Valuta { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(3, MinimumLength:=3)>

      <RegularExpression("^[A-Z]+$", ErrorMessage:="Only currency in select are accepted")>

      Public Property Valuta As String
  overload: TicketSystem.RestApiClient.Model.Payment.Valuta*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 3
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ^[A-Z]+$
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: Only currency in select are accepted
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.RestApiClient.Model.Payment.OrderReference
  commentId: P:TicketSystem.RestApiClient.Model.Payment.OrderReference
  id: OrderReference
  parent: TicketSystem.RestApiClient.Model.Payment
  langs:
  - csharp
  - vb
  name: OrderReference
  nameWithType: Payment.OrderReference
  fullName: TicketSystem.RestApiClient.Model.Payment.OrderReference
  type: Property
  source:
    id: OrderReference
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Payment.cs
    startLine: 13
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  syntax:
    content: public string OrderReference { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property OrderReference As String
  overload: TicketSystem.RestApiClient.Model.Payment.OrderReference*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TicketSystem.RestApiClient.Model.Payment.#ctor
  commentId: M:TicketSystem.RestApiClient.Model.Payment.#ctor
  id: '#ctor'
  parent: TicketSystem.RestApiClient.Model.Payment
  langs:
  - csharp
  - vb
  name: Payment()
  nameWithType: Payment.Payment()
  fullName: TicketSystem.RestApiClient.Model.Payment.Payment()
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\RestApiClient\Model\Payment.cs
    startLine: 18
  assemblies:
  - RestApiClient
  namespace: TicketSystem.RestApiClient.Model
  summary: "\nDefault constructor, make a order reference random \n"
  example: []
  syntax:
    content: public Payment()
    content.vb: Public Sub New
  overload: TicketSystem.RestApiClient.Model.Payment.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.RestApiClient.Model
  commentId: N:TicketSystem.RestApiClient.Model
  isExternal: false
  name: TicketSystem.RestApiClient.Model
  nameWithType: TicketSystem.RestApiClient.Model
  fullName: TicketSystem.RestApiClient.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.RestApiClient.Model.Payment.Valuta*
  commentId: Overload:TicketSystem.RestApiClient.Model.Payment.Valuta
  isExternal: false
  name: Valuta
  nameWithType: Payment.Valuta
  fullName: TicketSystem.RestApiClient.Model.Payment.Valuta
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.RestApiClient.Model.Payment.OrderReference*
  commentId: Overload:TicketSystem.RestApiClient.Model.Payment.OrderReference
  isExternal: false
  name: OrderReference
  nameWithType: Payment.OrderReference
  fullName: TicketSystem.RestApiClient.Model.Payment.OrderReference
- uid: TicketSystem.RestApiClient.Model.Payment.#ctor*
  commentId: Overload:TicketSystem.RestApiClient.Model.Payment.#ctor
  isExternal: false
  name: Payment
  nameWithType: Payment.Payment
  fullName: TicketSystem.RestApiClient.Model.Payment.Payment
