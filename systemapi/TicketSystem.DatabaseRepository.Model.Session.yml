### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Model.Session
  commentId: T:TicketSystem.DatabaseRepository.Model.Session
  id: Session
  parent: TicketSystem.DatabaseRepository.Model
  children:
  - TicketSystem.DatabaseRepository.Model.Session.Active
  - TicketSystem.DatabaseRepository.Model.Session.Created
  - TicketSystem.DatabaseRepository.Model.Session.ID
  - TicketSystem.DatabaseRepository.Model.Session.Secret
  - TicketSystem.DatabaseRepository.Model.Session.UserID
  langs:
  - csharp
  - vb
  name: Session
  nameWithType: Session
  fullName: TicketSystem.DatabaseRepository.Model.Session
  type: Class
  source:
    id: Session
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\Session.cs
    startLine: 6
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public class Session
    content.vb: Public Class Session
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.Model.Session.ID
  commentId: P:TicketSystem.DatabaseRepository.Model.Session.ID
  id: ID
  parent: TicketSystem.DatabaseRepository.Model.Session
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: Session.ID
  fullName: TicketSystem.DatabaseRepository.Model.Session.ID
  type: Property
  source:
    id: ID
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\Session.cs
    startLine: 8
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public int ID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ID As Integer
  overload: TicketSystem.DatabaseRepository.Model.Session.ID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Session.UserID
  commentId: P:TicketSystem.DatabaseRepository.Model.Session.UserID
  id: UserID
  parent: TicketSystem.DatabaseRepository.Model.Session
  langs:
  - csharp
  - vb
  name: UserID
  nameWithType: Session.UserID
  fullName: TicketSystem.DatabaseRepository.Model.Session.UserID
  type: Property
  source:
    id: UserID
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\Session.cs
    startLine: 9
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public int UserID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property UserID As Integer
  overload: TicketSystem.DatabaseRepository.Model.Session.UserID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Session.Secret
  commentId: P:TicketSystem.DatabaseRepository.Model.Session.Secret
  id: Secret
  parent: TicketSystem.DatabaseRepository.Model.Session
  langs:
  - csharp
  - vb
  name: Secret
  nameWithType: Session.Secret
  fullName: TicketSystem.DatabaseRepository.Model.Session.Secret
  type: Property
  source:
    id: Secret
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\Session.cs
    startLine: 10
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string Secret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Secret As String
  overload: TicketSystem.DatabaseRepository.Model.Session.Secret*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Session.Active
  commentId: P:TicketSystem.DatabaseRepository.Model.Session.Active
  id: Active
  parent: TicketSystem.DatabaseRepository.Model.Session
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: Session.Active
  fullName: TicketSystem.DatabaseRepository.Model.Session.Active
  type: Property
  source:
    id: Active
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\Session.cs
    startLine: 11
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: TicketSystem.DatabaseRepository.Model.Session.Active*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.Session.Created
  commentId: P:TicketSystem.DatabaseRepository.Model.Session.Created
  id: Created
  parent: TicketSystem.DatabaseRepository.Model.Session
  langs:
  - csharp
  - vb
  name: Created
  nameWithType: Session.Created
  fullName: TicketSystem.DatabaseRepository.Model.Session.Created
  type: Property
  source:
    id: Created
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\Session.cs
    startLine: 12
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public DateTime Created { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property Created As Date
  overload: TicketSystem.DatabaseRepository.Model.Session.Created*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.Model.Session.ID*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Session.ID
  isExternal: false
  name: ID
  nameWithType: Session.ID
  fullName: TicketSystem.DatabaseRepository.Model.Session.ID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystem.DatabaseRepository.Model.Session.UserID*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Session.UserID
  isExternal: false
  name: UserID
  nameWithType: Session.UserID
  fullName: TicketSystem.DatabaseRepository.Model.Session.UserID
- uid: TicketSystem.DatabaseRepository.Model.Session.Secret*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Session.Secret
  isExternal: false
  name: Secret
  nameWithType: Session.Secret
  fullName: TicketSystem.DatabaseRepository.Model.Session.Secret
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Model.Session.Active*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Session.Active
  isExternal: false
  name: Active
  nameWithType: Session.Active
  fullName: TicketSystem.DatabaseRepository.Model.Session.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TicketSystem.DatabaseRepository.Model.Session.Created*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.Session.Created
  isExternal: false
  name: Created
  nameWithType: Session.Created
  fullName: TicketSystem.DatabaseRepository.Model.Session.Created
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
