### YamlMime:ManagedReference
items:
- uid: TicketShop.Helpers.MessagesHelper
  commentId: T:TicketShop.Helpers.MessagesHelper
  id: MessagesHelper
  parent: TicketShop.Helpers
  children:
  - TicketShop.Helpers.MessagesHelper.Alert(System.String,System.Collections.Generic.List{System.String})
  - TicketShop.Helpers.MessagesHelper.Alert(System.String,System.String)
  - TicketShop.Helpers.MessagesHelper.Alerts(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})
  langs:
  - csharp
  - vb
  name: MessagesHelper
  nameWithType: MessagesHelper
  fullName: TicketShop.Helpers.MessagesHelper
  type: Class
  source:
    id: MessagesHelper
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShop\Helpers\MessagesHelper.cs
    startLine: 9
  assemblies:
  - TicketShop
  namespace: TicketShop.Helpers
  syntax:
    content: public static class MessagesHelper
    content.vb: Public Module MessagesHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: TicketShop.Helpers.MessagesHelper.Alerts(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})
  commentId: M:TicketShop.Helpers.MessagesHelper.Alerts(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})
  id: Alerts(System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}})
  parent: TicketShop.Helpers.MessagesHelper
  langs:
  - csharp
  - vb
  name: Alerts(Dictionary<String, List<String>>)
  nameWithType: MessagesHelper.Alerts(Dictionary<String, List<String>>)
  fullName: TicketShop.Helpers.MessagesHelper.Alerts(System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>)
  type: Method
  source:
    id: Alerts
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShop\Helpers\MessagesHelper.cs
    startLine: 17
  assemblies:
  - TicketShop
  namespace: TicketShop.Helpers
  summary: "\nPrint Bootstrap Alerts messages\n"
  example: []
  syntax:
    content: public static HtmlContentBuilder Alerts(Dictionary<string, List<string>> messages)
    parameters:
    - id: messages
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
      description: Messages to print (List of strings)
    return:
      type: Microsoft.AspNetCore.Html.HtmlContentBuilder
      description: Html to print
    content.vb: Public Shared Function Alerts(messages As Dictionary(Of String, List(Of String))) As HtmlContentBuilder
  overload: TicketShop.Helpers.MessagesHelper.Alerts*
  nameWithType.vb: MessagesHelper.Alerts(Dictionary(Of String, List(Of String)))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TicketShop.Helpers.MessagesHelper.Alerts(System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String)))
  name.vb: Alerts(Dictionary(Of String, List(Of String)))
- uid: TicketShop.Helpers.MessagesHelper.Alert(System.String,System.Collections.Generic.List{System.String})
  commentId: M:TicketShop.Helpers.MessagesHelper.Alert(System.String,System.Collections.Generic.List{System.String})
  id: Alert(System.String,System.Collections.Generic.List{System.String})
  parent: TicketShop.Helpers.MessagesHelper
  langs:
  - csharp
  - vb
  name: Alert(String, List<String>)
  nameWithType: MessagesHelper.Alert(String, List<String>)
  fullName: TicketShop.Helpers.MessagesHelper.Alert(System.String, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    id: Alert
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShop\Helpers\MessagesHelper.cs
    startLine: 38
  assemblies:
  - TicketShop
  namespace: TicketShop.Helpers
  summary: "\nPrint Bootstrap Alert message\n"
  example: []
  syntax:
    content: public static HtmlContentBuilder Alert(string type, List<string> messages)
    parameters:
    - id: type
      type: System.String
      description: Bootstrap css-class extension (string)
    - id: messages
      type: System.Collections.Generic.List{System.String}
      description: Messages to print (List of strings)
    return:
      type: Microsoft.AspNetCore.Html.HtmlContentBuilder
      description: Html to print
    content.vb: Public Shared Function Alert(type As String, messages As List(Of String)) As HtmlContentBuilder
  overload: TicketShop.Helpers.MessagesHelper.Alert*
  nameWithType.vb: MessagesHelper.Alert(String, List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TicketShop.Helpers.MessagesHelper.Alert(System.String, System.Collections.Generic.List(Of System.String))
  name.vb: Alert(String, List(Of String))
- uid: TicketShop.Helpers.MessagesHelper.Alert(System.String,System.String)
  commentId: M:TicketShop.Helpers.MessagesHelper.Alert(System.String,System.String)
  id: Alert(System.String,System.String)
  parent: TicketShop.Helpers.MessagesHelper
  langs:
  - csharp
  - vb
  name: Alert(String, String)
  nameWithType: MessagesHelper.Alert(String, String)
  fullName: TicketShop.Helpers.MessagesHelper.Alert(System.String, System.String)
  type: Method
  source:
    id: Alert
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShop\Helpers\MessagesHelper.cs
    startLine: 71
  assemblies:
  - TicketShop
  namespace: TicketShop.Helpers
  summary: "\nPrint Bootstrap Alert message\n"
  example: []
  syntax:
    content: public static HtmlContentBuilder Alert(string type, string message)
    parameters:
    - id: type
      type: System.String
      description: Bootstrap css-class extension (string)
    - id: message
      type: System.String
      description: Message to print (html as string)
    return:
      type: Microsoft.AspNetCore.Html.HtmlContentBuilder
      description: Html to print
    content.vb: Public Shared Function Alert(type As String, message As String) As HtmlContentBuilder
  overload: TicketShop.Helpers.MessagesHelper.Alert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TicketShop.Helpers
  commentId: N:TicketShop.Helpers
  isExternal: false
  name: TicketShop.Helpers
  nameWithType: TicketShop.Helpers
  fullName: TicketShop.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketShop.Helpers.MessagesHelper.Alerts*
  commentId: Overload:TicketShop.Helpers.MessagesHelper.Alerts
  isExternal: false
  name: Alerts
  nameWithType: MessagesHelper.Alerts
  fullName: TicketShop.Helpers.MessagesHelper.Alerts
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<String>>
  nameWithType: Dictionary<String, List<String>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<System.String>>
  nameWithType.vb: Dictionary(Of String, List(Of String))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of System.String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Html.HtmlContentBuilder
  commentId: T:Microsoft.AspNetCore.Html.HtmlContentBuilder
  parent: Microsoft.AspNetCore.Html
  isExternal: true
  name: HtmlContentBuilder
  nameWithType: HtmlContentBuilder
  fullName: Microsoft.AspNetCore.Html.HtmlContentBuilder
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Microsoft.AspNetCore.Html
  commentId: N:Microsoft.AspNetCore.Html
  isExternal: false
  name: Microsoft.AspNetCore.Html
  nameWithType: Microsoft.AspNetCore.Html
  fullName: Microsoft.AspNetCore.Html
- uid: TicketShop.Helpers.MessagesHelper.Alert*
  commentId: Overload:TicketShop.Helpers.MessagesHelper.Alert
  isExternal: false
  name: Alert
  nameWithType: MessagesHelper.Alert
  fullName: TicketShop.Helpers.MessagesHelper.Alert
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
