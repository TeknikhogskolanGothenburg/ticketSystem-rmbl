### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys
  commentId: T:TicketSystem.DatabaseRepository.Model.ApiKeys
  id: ApiKeys
  parent: TicketSystem.DatabaseRepository.Model
  children:
  - TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID
  - TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue
  - TicketSystem.DatabaseRepository.Model.ApiKeys.Secret
  langs:
  - csharp
  - vb
  name: ApiKeys
  nameWithType: ApiKeys
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys
  type: Class
  source:
    id: ApiKeys
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\ApiKeys.cs
    startLine: 6
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public class ApiKeys
    content.vb: Public Class ApiKeys
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID
  commentId: P:TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID
  id: FranchiseID
  parent: TicketSystem.DatabaseRepository.Model.ApiKeys
  langs:
  - csharp
  - vb
  name: FranchiseID
  nameWithType: ApiKeys.FranchiseID
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID
  type: Property
  source:
    id: FranchiseID
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\ApiKeys.cs
    startLine: 8
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string FranchiseID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FranchiseID As String
  overload: TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue
  commentId: P:TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue
  id: KeyValue
  parent: TicketSystem.DatabaseRepository.Model.ApiKeys
  langs:
  - csharp
  - vb
  name: KeyValue
  nameWithType: ApiKeys.KeyValue
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue
  type: Property
  source:
    id: KeyValue
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\ApiKeys.cs
    startLine: 9
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string KeyValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property KeyValue As String
  overload: TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys.Secret
  commentId: P:TicketSystem.DatabaseRepository.Model.ApiKeys.Secret
  id: Secret
  parent: TicketSystem.DatabaseRepository.Model.ApiKeys
  langs:
  - csharp
  - vb
  name: Secret
  nameWithType: ApiKeys.Secret
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys.Secret
  type: Property
  source:
    id: Secret
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\ApiKeys.cs
    startLine: 10
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string Secret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Secret As String
  overload: TicketSystem.DatabaseRepository.Model.ApiKeys.Secret*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID
  isExternal: false
  name: FranchiseID
  nameWithType: ApiKeys.FranchiseID
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys.FranchiseID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue
  isExternal: false
  name: KeyValue
  nameWithType: ApiKeys.KeyValue
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys.KeyValue
- uid: TicketSystem.DatabaseRepository.Model.ApiKeys.Secret*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.ApiKeys.Secret
  isExternal: false
  name: Secret
  nameWithType: ApiKeys.Secret
  fullName: TicketSystem.DatabaseRepository.Model.ApiKeys.Secret
