### YamlMime:ManagedReference
items:
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher
  commentId: T:TicketShopAPI.APISecurity.SecurePasswordHasher
  id: SecurePasswordHasher
  parent: TicketShopAPI.APISecurity
  children:
  - TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String)
  - TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String,System.Int32)
  - TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported(System.String)
  - TicketShopAPI.APISecurity.SecurePasswordHasher.Verify(System.String,System.String)
  langs:
  - csharp
  - vb
  name: SecurePasswordHasher
  nameWithType: SecurePasswordHasher
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher
  type: Class
  source:
    id: SecurePasswordHasher
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShopAPI\APISecurity\SecurePasswordHasher.cs
    startLine: 12
  assemblies:
  - TicketShopAPI
  namespace: TicketShopAPI.APISecurity
  summary: "\nBased on code from csharptest.net and Christian Gollhardt at https://stackoverflow.com/questions/4181198/how-to-hash-a-password/10402129\n"
  example: []
  syntax:
    content: public sealed class SecurePasswordHasher
    content.vb: Public NotInheritable Class SecurePasswordHasher
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String,System.Int32)
  commentId: M:TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String,System.Int32)
  id: Hash(System.String,System.Int32)
  parent: TicketShopAPI.APISecurity.SecurePasswordHasher
  langs:
  - csharp
  - vb
  name: Hash(String, Int32)
  nameWithType: SecurePasswordHasher.Hash(String, Int32)
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String, System.Int32)
  type: Method
  source:
    id: Hash
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShopAPI\APISecurity\SecurePasswordHasher.cs
    startLine: 30
  assemblies:
  - TicketShopAPI
  namespace: TicketShopAPI.APISecurity
  summary: "\nCreates a hash from a password\n"
  example: []
  syntax:
    content: public static string Hash(string password, int iterations)
    parameters:
    - id: password
      type: System.String
      description: the password
    - id: iterations
      type: System.Int32
      description: number of iterations
    return:
      type: System.String
      description: the hash
    content.vb: Public Shared Function Hash(password As String, iterations As Integer) As String
  overload: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String)
  commentId: M:TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String)
  id: Hash(System.String)
  parent: TicketShopAPI.APISecurity.SecurePasswordHasher
  langs:
  - csharp
  - vb
  name: Hash(String)
  nameWithType: SecurePasswordHasher.Hash(String)
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash(System.String)
  type: Method
  source:
    id: Hash
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShopAPI\APISecurity\SecurePasswordHasher.cs
    startLine: 57
  assemblies:
  - TicketShopAPI
  namespace: TicketShopAPI.APISecurity
  summary: "\nCreates a hash from a password with 10000 iterations\n"
  example: []
  syntax:
    content: public static string Hash(string password)
    parameters:
    - id: password
      type: System.String
      description: the password
    return:
      type: System.String
      description: the hash
    content.vb: Public Shared Function Hash(password As String) As String
  overload: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported(System.String)
  commentId: M:TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported(System.String)
  id: IsHashSupported(System.String)
  parent: TicketShopAPI.APISecurity.SecurePasswordHasher
  langs:
  - csharp
  - vb
  name: IsHashSupported(String)
  nameWithType: SecurePasswordHasher.IsHashSupported(String)
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported(System.String)
  type: Method
  source:
    id: IsHashSupported
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShopAPI\APISecurity\SecurePasswordHasher.cs
    startLine: 67
  assemblies:
  - TicketShopAPI
  namespace: TicketShopAPI.APISecurity
  summary: "\nCheck if hash is supported\n"
  example: []
  syntax:
    content: public static bool IsHashSupported(string hashString)
    parameters:
    - id: hashString
      type: System.String
      description: the hash
    return:
      type: System.Boolean
      description: is supported?
    content.vb: Public Shared Function IsHashSupported(hashString As String) As Boolean
  overload: TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.Verify(System.String,System.String)
  commentId: M:TicketShopAPI.APISecurity.SecurePasswordHasher.Verify(System.String,System.String)
  id: Verify(System.String,System.String)
  parent: TicketShopAPI.APISecurity.SecurePasswordHasher
  langs:
  - csharp
  - vb
  name: Verify(String, String)
  nameWithType: SecurePasswordHasher.Verify(String, String)
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.Verify(System.String, System.String)
  type: Method
  source:
    id: Verify
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\TicketShopAPI\APISecurity\SecurePasswordHasher.cs
    startLine: 78
  assemblies:
  - TicketShopAPI
  namespace: TicketShopAPI.APISecurity
  summary: "\nverify a password against a hash\n"
  example: []
  syntax:
    content: public static bool Verify(string password, string hashedPassword)
    parameters:
    - id: password
      type: System.String
      description: the password
    - id: hashedPassword
      type: System.String
      description: the hash
    return:
      type: System.Boolean
      description: could be verified?
    content.vb: Public Shared Function Verify(password As String, hashedPassword As String) As Boolean
  overload: TicketShopAPI.APISecurity.SecurePasswordHasher.Verify*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TicketShopAPI.APISecurity
  commentId: N:TicketShopAPI.APISecurity
  isExternal: false
  name: TicketShopAPI.APISecurity
  nameWithType: TicketShopAPI.APISecurity
  fullName: TicketShopAPI.APISecurity
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash*
  commentId: Overload:TicketShopAPI.APISecurity.SecurePasswordHasher.Hash
  isExternal: false
  name: Hash
  nameWithType: SecurePasswordHasher.Hash
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.Hash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported*
  commentId: Overload:TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported
  isExternal: false
  name: IsHashSupported
  nameWithType: SecurePasswordHasher.IsHashSupported
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.IsHashSupported
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TicketShopAPI.APISecurity.SecurePasswordHasher.Verify*
  commentId: Overload:TicketShopAPI.APISecurity.SecurePasswordHasher.Verify
  isExternal: false
  name: Verify
  nameWithType: SecurePasswordHasher.Verify
  fullName: TicketShopAPI.APISecurity.SecurePasswordHasher.Verify
