### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent
  commentId: T:TicketSystem.DatabaseRepository.Model.TicketEvent
  id: TicketEvent
  parent: TicketSystem.DatabaseRepository.Model
  children:
  - TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription
  - TicketSystem.DatabaseRepository.Model.TicketEvent.EventName
  - TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId
  langs:
  - csharp
  - vb
  name: TicketEvent
  nameWithType: TicketEvent
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent
  type: Class
  source:
    id: TicketEvent
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\TicketEvent.cs
    startLine: 2
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: 'public class TicketEvent : object'
    content.vb: >-
      Public Class TicketEvent

          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId
  id: TicketEventId
  parent: TicketSystem.DatabaseRepository.Model.TicketEvent
  langs:
  - csharp
  - vb
  name: TicketEventId
  nameWithType: TicketEvent.TicketEventId
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId
  type: Property
  source:
    id: TicketEventId
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\TicketEvent.cs
    startLine: 4
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public int TicketEventId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TicketEventId As Integer
  overload: TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent.EventName
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketEvent.EventName
  id: EventName
  parent: TicketSystem.DatabaseRepository.Model.TicketEvent
  langs:
  - csharp
  - vb
  name: EventName
  nameWithType: TicketEvent.EventName
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent.EventName
  type: Property
  source:
    id: EventName
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\TicketEvent.cs
    startLine: 5
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string EventName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EventName As String
  overload: TicketSystem.DatabaseRepository.Model.TicketEvent.EventName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription
  commentId: P:TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription
  id: EventHtmlDescription
  parent: TicketSystem.DatabaseRepository.Model.TicketEvent
  langs:
  - csharp
  - vb
  name: EventHtmlDescription
  nameWithType: TicketEvent.EventHtmlDescription
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription
  type: Property
  source:
    id: EventHtmlDescription
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\Model\TicketEvent.cs
    startLine: 6
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Model
  syntax:
    content: public string EventHtmlDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EventHtmlDescription As String
  overload: TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId
  isExternal: false
  name: TicketEventId
  nameWithType: TicketEvent.TicketEventId
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent.TicketEventId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent.EventName*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketEvent.EventName
  isExternal: false
  name: EventName
  nameWithType: TicketEvent.EventName
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent.EventName
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription*
  commentId: Overload:TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription
  isExternal: false
  name: EventHtmlDescription
  nameWithType: TicketEvent.EventHtmlDescription
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent.EventHtmlDescription
