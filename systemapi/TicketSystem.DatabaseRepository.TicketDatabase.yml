### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.TicketDatabase
  commentId: T:TicketSystem.DatabaseRepository.TicketDatabase
  id: TicketDatabase
  parent: TicketSystem.DatabaseRepository
  children:
  - TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String,System.String)
  - TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
  - TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  langs:
  - csharp
  - vb
  name: TicketDatabase
  nameWithType: TicketDatabase
  fullName: TicketSystem.DatabaseRepository.TicketDatabase
  type: Class
  source:
    id: TicketDatabase
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\TicketDatabase.cs
    startLine: 9
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: 'public class TicketDatabase : object, ITicketDatabase'
    content.vb: >-
      Public Class TicketDatabase

          Inherits Object

          Implements ITicketDatabase
  inheritance:
  - System.Object
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String,System.String)
  id: EventAdd(System.String,System.String)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: EventAdd(String, String)
  nameWithType: TicketDatabase.EventAdd(String, String)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd(System.String, System.String)
  type: Method
  source:
    id: EventAdd
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\TicketDatabase.cs
    startLine: 11
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: public TicketEvent EventAdd(string name, string description)
    parameters:
    - id: name
      type: System.String
    - id: description
      type: System.String
    return:
      type: TicketSystem.DatabaseRepository.Model.TicketEvent
    content.vb: Public Function EventAdd(name As String, description As String) As TicketEvent
  overload: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd*
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
  id: VenueAdd(System.String,System.String,System.String,System.String)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: VenueAdd(String, String, String, String)
  nameWithType: TicketDatabase.VenueAdd(String, String, String, String)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd(System.String, System.String, System.String, System.String)
  type: Method
  source:
    id: VenueAdd
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\TicketDatabase.cs
    startLine: 23
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: public Venue VenueAdd(string name, string address, string city, string country)
    parameters:
    - id: name
      type: System.String
    - id: address
      type: System.String
    - id: city
      type: System.String
    - id: country
      type: System.String
    return:
      type: TicketSystem.DatabaseRepository.Model.Venue
    content.vb: Public Function VenueAdd(name As String, address As String, city As String, country As String) As Venue
  overload: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd*
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  commentId: M:TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  id: VenuesFind(System.String)
  parent: TicketSystem.DatabaseRepository.TicketDatabase
  langs:
  - csharp
  - vb
  name: VenuesFind(String)
  nameWithType: TicketDatabase.VenuesFind(String)
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind(System.String)
  type: Method
  source:
    id: VenuesFind
    path: C:\Users\rober\Documents\GitHub\ticketSystem-rmbl\src\DatabaseRepository\TicketDatabase.cs
    startLine: 35
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository
  syntax:
    content: public List<Venue> VenuesFind(string query)
    parameters:
    - id: query
      type: System.String
    return:
      type: List{TicketSystem.DatabaseRepository.Model.Venue}
    content.vb: Public Function VenuesFind(query As String) As List(Of Venue)
  overload: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind*
  implements:
  - TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TicketSystem.DatabaseRepository
  commentId: N:TicketSystem.DatabaseRepository
  isExternal: false
  name: TicketSystem.DatabaseRepository
  nameWithType: TicketSystem.DatabaseRepository
  fullName: TicketSystem.DatabaseRepository
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TicketSystem.DatabaseRepository.ITicketDatabase
  commentId: T:TicketSystem.DatabaseRepository.ITicketDatabase
  parent: TicketSystem.DatabaseRepository
  isExternal: false
  name: ITicketDatabase
  nameWithType: ITicketDatabase
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.EventAdd
  isExternal: false
  name: EventAdd
  nameWithType: TicketDatabase.EventAdd
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.EventAdd
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  isExternal: true
  name: EventAdd(String, String)
  nameWithType: ITicketDatabase.EventAdd(String, String)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String, System.String)
  spec.csharp:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
    name: EventAdd
    nameWithType: ITicketDatabase.EventAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd(System.String,System.String)
    name: EventAdd
    nameWithType: ITicketDatabase.EventAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.EventAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Model.TicketEvent
  commentId: T:TicketSystem.DatabaseRepository.Model.TicketEvent
  parent: TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketEvent
  nameWithType: TicketEvent
  fullName: TicketSystem.DatabaseRepository.Model.TicketEvent
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd
  isExternal: false
  name: VenueAdd
  nameWithType: TicketDatabase.VenueAdd
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenueAdd
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  isExternal: true
  name: VenueAdd(String, String, String, String)
  nameWithType: ITicketDatabase.VenueAdd(String, String, String, String)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(System.String, System.String, System.String, System.String)
  spec.csharp:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
    name: VenueAdd
    nameWithType: ITicketDatabase.VenueAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd(System.String,System.String,System.String,System.String)
    name: VenueAdd
    nameWithType: ITicketDatabase.VenueAdd
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenueAdd
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketSystem.DatabaseRepository.Model.Venue
  commentId: T:TicketSystem.DatabaseRepository.Model.Venue
  parent: TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: Venue
  nameWithType: Venue
  fullName: TicketSystem.DatabaseRepository.Model.Venue
- uid: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind*
  commentId: Overload:TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind
  isExternal: false
  name: VenuesFind
  nameWithType: TicketDatabase.VenuesFind
  fullName: TicketSystem.DatabaseRepository.TicketDatabase.VenuesFind
- uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  commentId: M:TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  parent: TicketSystem.DatabaseRepository.ITicketDatabase
  isExternal: true
  name: VenuesFind(String)
  nameWithType: ITicketDatabase.VenuesFind(String)
  fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
  spec.csharp:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
    name: VenuesFind
    nameWithType: ITicketDatabase.VenuesFind
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind(System.String)
    name: VenuesFind
    nameWithType: ITicketDatabase.VenuesFind
    fullName: TicketSystem.DatabaseRepository.ITicketDatabase.VenuesFind
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List{TicketSystem.DatabaseRepository.Model.Venue}
  commentId: '!:List{TicketSystem.DatabaseRepository.Model.Venue}'
  definition: List`1
  name: List<Venue>
  nameWithType: List<Venue>
  fullName: List<TicketSystem.DatabaseRepository.Model.Venue>
  nameWithType.vb: List(Of Venue)
  fullName.vb: List(Of TicketSystem.DatabaseRepository.Model.Venue)
  name.vb: List(Of Venue)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketSystem.DatabaseRepository.Model.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketSystem.DatabaseRepository.Model.Venue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketSystem.DatabaseRepository.Model.Venue
    name: Venue
    nameWithType: Venue
    fullName: TicketSystem.DatabaseRepository.Model.Venue
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
